service: cartoongrabber

plugins:
  - serverless-dynamodb-local
  - serverless-offline-scheduler
  - serverless-offline

provider:
  name: aws
  region: eu-central-1
  runtime: nodejs12.x
  environment:
    CARTOON_TABLE: cartoons
    SLACK_URL: ${ssm:/cartoongrabber-slack-url~true}
    SLACK_CHANNEL_NAME: ${ssm:/cartoongrabber-slack-channel-name}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
      Resource:
        Fn::GetAtt:
          - CartoonsDynamoDbTable
          - Arn
  cfLogs: true

package:
  include:
    - handlers/**
    - handler.js
  exclude:
    - test/**

functions:
  grab:
    handler: handlers.grab
    events:
      - schedule: cron(25 5,9,13 * * ? *)
  report:
    handler: handlers.report
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - CartoonsDynamoDbTable
              - StreamArn
          batchSize: 1

resources:
  Resources:
    CartoonsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      #      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: 'name'
            AttributeType: 'S'
        KeySchema:
          - AttributeName: 'name'
            KeyType: 'HASH'
        BillingMode: PAY_PER_REQUEST
        StreamSpecification:
          StreamViewType: 'NEW_IMAGE'
        TableName: ${self:provider.environment.CARTOON_TABLE}
    GrabLogGroup:
      Properties:
        RetentionInDays: "14"
    ReportLogGroup:
      Properties:
        RetentionInDays: "14"

custom:
  dynamodb:
    stages:
      - dev
    start:
      port: '8000'
      inMemory: true,
      migrate: true
